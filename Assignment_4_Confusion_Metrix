{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Assignment_4_Confusion_Metrix","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMrHQQHFCbAeZQ7Ap+sSina"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":205,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OnBjGlaoVsgs","executionInfo":{"status":"ok","timestamp":1658232102341,"user_tz":-330,"elapsed":458,"user":{"displayName":"Shivam Gupta","userId":"06864576598689351732"}},"outputId":"eafefa89-801a-47ac-abdd-f00f77078225"},"outputs":[{"output_type":"stream","name":"stdout","text":["     PassengerId  Survived  Pclass  \\\n","0              1         0       3   \n","1              2         1       1   \n","2              3         1       3   \n","3              4         1       1   \n","4              5         0       3   \n","..           ...       ...     ...   \n","886          887         0       2   \n","887          888         1       1   \n","888          889         0       3   \n","889          890         1       1   \n","890          891         0       3   \n","\n","                                                  Name     Sex   Age  SibSp  \\\n","0                              Braund, Mr. Owen Harris    male  22.0      1   \n","1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n","2                               Heikkinen, Miss. Laina  female  26.0      0   \n","3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n","4                             Allen, Mr. William Henry    male  35.0      0   \n","..                                                 ...     ...   ...    ...   \n","886                              Montvila, Rev. Juozas    male  27.0      0   \n","887                       Graham, Miss. Margaret Edith  female  19.0      0   \n","888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n","889                              Behr, Mr. Karl Howell    male  26.0      0   \n","890                                Dooley, Mr. Patrick    male  32.0      0   \n","\n","     Parch            Ticket     Fare Cabin Embarked  \n","0        0         A/5 21171   7.2500   NaN        S  \n","1        0          PC 17599  71.2833   C85        C  \n","2        0  STON/O2. 3101282   7.9250   NaN        S  \n","3        0            113803  53.1000  C123        S  \n","4        0            373450   8.0500   NaN        S  \n","..     ...               ...      ...   ...      ...  \n","886      0            211536  13.0000   NaN        S  \n","887      0            112053  30.0000   B42        S  \n","888      2        W./C. 6607  23.4500   NaN        S  \n","889      0            111369  30.0000  C148        C  \n","890      0            370376   7.7500   NaN        Q  \n","\n","[891 rows x 12 columns]\n"]}],"source":["# Reading and printing csv file -->\n","import pandas as pd\n","df=pd.read_csv('/content/titanic.csv')\n","print(df)"]},{"cell_type":"code","source":["#Printing all the keys --> \n","print(list(df.keys()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ucsvAy-LZjGn","executionInfo":{"status":"ok","timestamp":1658232102924,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shivam Gupta","userId":"06864576598689351732"}},"outputId":"29e0c967-d04d-4874-a98f-c04e9c3a8a03"},"execution_count":206,"outputs":[{"output_type":"stream","name":"stdout","text":["['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp', 'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked']\n"]}]},{"cell_type":"code","source":["#replacing the NaN entries of column \"Age\" by mean of all entries of \"Age\" -->\n","x=df['Age'].mean() \n","print(\"Mean is:\",x)\n","df['Age']=df['Age'].fillna(x)\n","print(df.Age)\n","print('------------------------------------------------------------')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4UEP6_tSAfEW","executionInfo":{"status":"ok","timestamp":1658232102925,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shivam Gupta","userId":"06864576598689351732"}},"outputId":"ff9bd3a5-d090-4902-bd7c-9e537f99fe96"},"execution_count":207,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean is: 29.69911764705882\n","0      22.000000\n","1      38.000000\n","2      26.000000\n","3      35.000000\n","4      35.000000\n","         ...    \n","886    27.000000\n","887    19.000000\n","888    29.699118\n","889    26.000000\n","890    32.000000\n","Name: Age, Length: 891, dtype: float64\n","------------------------------------------------------------\n"]}]},{"cell_type":"code","source":["#Assigning independent and dependent variables to X and y -->\n","X=df.drop(['PassengerId','Survived','Name','Sex','SibSp','Parch','Ticket','Cabin','Embarked'],axis='columns')\n","y=df['Survived']\n","\n","#Printing X and y -->\n","print(X)\n","print('------------------------------------------------------------')\n","print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jFyTQMbJQGOt","executionInfo":{"status":"ok","timestamp":1658232102925,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shivam Gupta","userId":"06864576598689351732"}},"outputId":"e959d5d0-7fce-447e-bf03-4ce6b55cfc9d"},"execution_count":208,"outputs":[{"output_type":"stream","name":"stdout","text":["     Pclass        Age     Fare\n","0         3  22.000000   7.2500\n","1         1  38.000000  71.2833\n","2         3  26.000000   7.9250\n","3         1  35.000000  53.1000\n","4         3  35.000000   8.0500\n","..      ...        ...      ...\n","886       2  27.000000  13.0000\n","887       1  19.000000  30.0000\n","888       3  29.699118  23.4500\n","889       1  26.000000  30.0000\n","890       3  32.000000   7.7500\n","\n","[891 rows x 3 columns]\n","------------------------------------------------------------\n","0      0\n","1      1\n","2      1\n","3      1\n","4      0\n","      ..\n","886    0\n","887    1\n","888    0\n","889    1\n","890    0\n","Name: Survived, Length: 891, dtype: int64\n"]}]},{"cell_type":"code","source":["#Applying random forest classification -->\n","from sklearn.ensemble import RandomForestClassifier \n","model=RandomForestClassifier() "],"metadata":{"id":"biHQgB5sWjyG","executionInfo":{"status":"ok","timestamp":1658232102926,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shivam Gupta","userId":"06864576598689351732"}}},"execution_count":209,"outputs":[]},{"cell_type":"code","source":["#Training and testing of our model by importing train_test_split  -->\n","from sklearn.model_selection import train_test_split\n","X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=9)\n","model.fit(X_train,y_train)\n","y_pred=model.predict(X_test)\n","print(\"Random Forest Accuracy\",model.score(X_test,y_test))"],"metadata":{"id":"kCIdgK8ogDaC","executionInfo":{"status":"ok","timestamp":1658232103393,"user_tz":-330,"elapsed":472,"user":{"displayName":"Shivam Gupta","userId":"06864576598689351732"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"ff49693c-7d93-4d14-91d5-ea8769e3a21f"},"execution_count":210,"outputs":[{"output_type":"stream","name":"stdout","text":["Random Forest Accuracy 0.659217877094972\n"]}]},{"cell_type":"code","source":["#Printing Confusion Matrix -->\n","from sklearn.metrics import classification_report,confusion_matrix,accuracy_score\n","cm=confusion_matrix(y_test,y_pred)\n","print(cm)"],"metadata":{"id":"RWcxgByUnIyh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658232103394,"user_tz":-330,"elapsed":12,"user":{"displayName":"Shivam Gupta","userId":"06864576598689351732"}},"outputId":"3ded61ba-cfa6-4291-f919-58d57aa4639a"},"execution_count":211,"outputs":[{"output_type":"stream","name":"stdout","text":["[[85 15]\n"," [46 33]]\n"]}]},{"cell_type":"code","source":["#Constructing confusion metrix using seaborn module -->\n","import matplotlib.pyplot as plt\n","plt.figure(figsize=(7,4))\n","import seaborn as sns\n","sns.heatmap(cm,annot=True)\n","plt.xlabel('Predicted')\n","plt.ylabel('Truth')\n","plt.show()"],"metadata":{"id":"-34oW_amnPtf","colab":{"base_uri":"https://localhost:8080/","height":279},"executionInfo":{"status":"ok","timestamp":1658232103929,"user_tz":-330,"elapsed":542,"user":{"displayName":"Shivam Gupta","userId":"06864576598689351732"}},"outputId":"0b019513-b106-454c-a6ca-af738ae9a8b7"},"execution_count":212,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 504x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Classification Report and Accuracy -->-->\n","print(\"Classifiaction Report --> \",classification_report(y_test,y_pred))   \n","print('---------------------------------------------')\n","print(\"Accuracy --> \",accuracy_score(y_test,y_pred))"],"metadata":{"id":"e2lgRt3onUYy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658232259115,"user_tz":-330,"elapsed":430,"user":{"displayName":"Shivam Gupta","userId":"06864576598689351732"}},"outputId":"7544e4a2-463c-4618-c434-c1a8cbb0e2df"},"execution_count":218,"outputs":[{"output_type":"stream","name":"stdout","text":["Classifiaction Report -->                precision    recall  f1-score   support\n","\n","           0       0.65      0.85      0.74       100\n","           1       0.69      0.42      0.52        79\n","\n","    accuracy                           0.66       179\n","   macro avg       0.67      0.63      0.63       179\n","weighted avg       0.67      0.66      0.64       179\n","\n","---------------------------------------------\n","Accuracy -->  0.659217877094972\n"]}]}]}